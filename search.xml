<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker自定义配置镜像</title>
      <link href="/2023/09/12/Docker%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E9%95%9C%E5%83%8F/"/>
      <url>/2023/09/12/Docker%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Docker常见命令"><a href="#1-Docker常见命令" class="headerlink" title="1.Docker常见命令"></a>1.Docker常见命令</h1><p>命令解读</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉取镜像</span></span><br><span class="line">docker pull [镜像名]</span><br><span class="line"><span class="comment">#查看本地镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment">#删除某个镜像</span></span><br><span class="line">docker rmi </span><br><span class="line"><span class="comment">#构建镜像  -t给镜像起名 .是指定为当前目录</span></span><br><span class="line">docker build -t [镜像名:版本号] .</span><br><span class="line"><span class="comment">#镜像打包</span></span><br><span class="line">docker save</span><br><span class="line"><span class="comment">#加载到本地</span></span><br><span class="line">docker load</span><br><span class="line"><span class="comment">#推送自己镜像</span></span><br><span class="line">docker push</span><br><span class="line"><span class="comment">#创建并运行容器</span></span><br><span class="line">docker run</span><br><span class="line"><span class="comment">#停止运行中的容器</span></span><br><span class="line">docker stop [容器名]</span><br><span class="line"><span class="comment">#启动停止的容器</span></span><br><span class="line">docker start [容器名]</span><br><span class="line"><span class="comment">#查看本地已经运行的容器</span></span><br><span class="line">docker ps </span><br><span class="line"><span class="comment">#删除一个容器 -f 强制删除</span></span><br><span class="line">docker <span class="built_in">rm</span> [容器名] -f</span><br><span class="line"><span class="comment">#查看容器运行中的日志 -f 滚动</span></span><br><span class="line">docker -f logs  [容器名]</span><br><span class="line"><span class="comment">#进入容器内部查看 -it 终端交互</span></span><br><span class="line">docker <span class="built_in">exec</span> -it [容器名] bash</span><br><span class="line"><span class="comment">#查看容器详细信息</span></span><br><span class="line">docker inspect [容器名]</span><br></pre></td></tr></table></figure><img src="/2023/09/12/Docker%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E9%95%9C%E5%83%8F/image-20230912100433543.png" class="" title="image-20230912100433543"><h1 id="2-自定义镜像"><a href="#2-自定义镜像" class="headerlink" title="2.自定义镜像"></a>2.自定义镜像</h1><p>Dockerfile文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基础镜像</span></span><br><span class="line">FROM openjdk:11.0-jre-buster</span><br><span class="line"><span class="comment">#设置时区</span></span><br><span class="line">ENV TZ=Asia/Shanghai</span><br><span class="line">RUN <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone</span><br><span class="line"><span class="comment">#拷贝jar包 并从命名</span></span><br><span class="line">copy docker-demo.jar /app.jar</span><br><span class="line"><span class="comment">#入口</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span><br></pre></td></tr></table></figure><img src="/2023/09/12/Docker%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E9%95%9C%E5%83%8F/image-20230912150552342.png" class="" title="image-20230912150552342"><p>构建镜像步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dockerfile文件和打包好的jar包在demo文件夹下</span></span><br><span class="line"><span class="built_in">cd</span> demo/</span><br><span class="line"><span class="comment">#构建镜像</span></span><br><span class="line">docker build -t docker-demo .</span><br><span class="line"><span class="comment">#创建启动 -p端口映射</span></span><br><span class="line">docker run -d --name [容器名] -p 8080:8080 [镜像名] </span><br></pre></td></tr></table></figure><p>网络</p><p>docker容器可以相互进行访问，但是由于每次分配给容器的ip会变化所以不方便</p><img src="/2023/09/12/Docker%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E9%95%9C%E5%83%8F/image-20230912152731580.png" class="" title="image-20230912152731580"><p>加入自定义网络的容器可以通过容器名相互访问，Docker的网络操作命令：</p><table><thead><tr><th align="center">命令</th><th>说明</th></tr></thead><tbody><tr><td align="center">docker network create</td><td>创建一个网络</td></tr><tr><td align="center">docker network ls</td><td>查看所有网络</td></tr><tr><td align="center">docker network rm</td><td>删除指定网络</td></tr><tr><td align="center">docker network prune</td><td>清除未使用网络</td></tr><tr><td align="center">docker network connect</td><td>使指定容器连接加入某网络</td></tr><tr><td align="center">docker network disconnect</td><td>使指定容器连接离开某网络</td></tr><tr><td align="center">docker network inspect</td><td>查看网络详细信息</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建网络</span></span><br><span class="line">docker network create [网络名]</span><br><span class="line"><span class="comment">#连接网络</span></span><br><span class="line">docker network connect [网络名] [容器名]</span><br></pre></td></tr></table></figure><h1 id="3-DockerCompose"><a href="#3-DockerCompose" class="headerlink" title="3.DockerCompose"></a>3.DockerCompose</h1><p><strong>目录结构：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ELK</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">├── elasticsearch</span><br><span class="line">│   ├── data</span><br><span class="line">│   ├── logs</span><br><span class="line">│   └── plugins</span><br><span class="line">├── kibana</span><br><span class="line">│   └── config</span><br><span class="line">│       └── kibana.yml</span><br><span class="line">└── logstash</span><br><span class="line">    ├── config</span><br><span class="line">    │   └── logstash.yml</span><br><span class="line">    └── pipeline</span><br><span class="line">        └── logstash.conf</span><br></pre></td></tr></table></figure><h1 id="编辑docker-compose-yml"><a href="#编辑docker-compose-yml" class="headerlink" title="编辑docker-compose.yml"></a>编辑docker-compose.yml</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch:7.17.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">network_elk_test</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9200:9200&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">cluster.name:</span> <span class="string">elasticsearch</span></span><br><span class="line">      <span class="attr">discovery.type:</span> <span class="string">single-node</span></span><br><span class="line">      <span class="attr">ES_JAVA_OPTS:</span> <span class="string">&quot;-Xms512m -Xmx512m&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./elasticsearch/plugins:/usr/share/elasticsearch/plugins</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./elasticsearch/data:/usr/share/elasticsearch/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./elasticsearch/logs:/usr/share/elasticsearch/logs</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">kibana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">kibana:7.17.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kibana</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">network_elk_test</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5601:5601&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">I18N_LOCALE:</span> <span class="string">zh-CN</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">logstash:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">logstash:7.17.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">logstash</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">network_elk_test</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4560:4560&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">network_elk_test:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ELKTest</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker下Redis配置</title>
      <link href="/2023/09/06/Docker%E4%B8%8BRedis%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/09/06/Docker%E4%B8%8BRedis%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于电脑系统重装，本地环境需要重新搭载，网上各种教程让人眼花缭乱，所以打算自己记录下本次搭建环境的过程，方便以后环境的快速搭载。</p><p>搭载环境：centos7 + docker</p></blockquote><h1 id="1-Docker下载安装"><a href="#1-Docker下载安装" class="headerlink" title="1.Docker下载安装"></a>1.Docker下载安装</h1><h2 id="1-1卸载"><a href="#1-1卸载" class="headerlink" title="1.1卸载"></a>1.1卸载</h2><p>如果之前安装过Docker，可使用以下命令进行卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine \</span><br><span class="line">                  docker-ce</span><br></pre></td></tr></table></figure><h2 id="1-2安装Docker"><a href="#1-2安装Docker" class="headerlink" title="1.2安装Docker"></a>1.2安装Docker</h2><p>首先安装yum工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils \</span><br><span class="line">           device-mapper-persistent-data \</span><br><span class="line">           lvm2 --skip-broken</span><br></pre></td></tr></table></figure><p>更新本地镜像源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置Docker的镜像源，这里采用阿里的</span></span><br><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">    </span><br><span class="line">sed -i <span class="string">&#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure><p>安装社区版Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce</span><br></pre></td></tr></table></figure><h2 id="1-3启动Docker"><a href="#1-3启动Docker" class="headerlink" title="1.3启动Docker"></a>1.3启动Docker</h2><p>关闭系统防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld  </span><br></pre></td></tr></table></figure><p>通过命令启动docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动docker服务</span></span><br><span class="line">systemctl start docker </span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止docker服务</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启docker服务</span></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>查看本地Docker版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><h1 id="2-Docker下Redis下载配置"><a href="#2-Docker下Redis下载配置" class="headerlink" title="2.Docker下Redis下载配置"></a>2.Docker下Redis下载配置</h1><h2 id="2-1获取redis镜像"><a href="#2-1获取redis镜像" class="headerlink" title="2.1获取redis镜像"></a>2.1获取redis镜像</h2><p><a href="https://hub.docker.com/_/redis?tab=tags">Docker的镜像仓库</a></p><h2 id="2-2下载redis镜像"><a href="#2-2下载redis镜像" class="headerlink" title="2.2下载redis镜像"></a>2.2下载redis镜像</h2><p>下载redis镜像文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis <span class="comment">#拉取最新版的redis</span></span><br><span class="line">docker pull redis:xxx <span class="comment">#下载指定版本的redis（xxx为版本号）</span></span><br></pre></td></tr></table></figure><p>查看docker中的镜像文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看镜像文件</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker images               </span></span><br><span class="line">REPOSITORY             TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">redis                  latest    506734eb5e71   2 weeks ago   138MB</span><br></pre></td></tr></table></figure><h2 id="2-3创建Redis配置挂载文件"><a href="#2-3创建Redis配置挂载文件" class="headerlink" title="2.3创建Redis配置挂载文件"></a>2.3创建Redis配置挂载文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /home/redis/conf  </span><br><span class="line"><span class="comment">#创建配置文件</span></span><br><span class="line"><span class="built_in">touch</span> /home/redis/conf/redis.conf</span><br></pre></td></tr></table></figure><p>需要将<a href="https://gitee.com/crushlxb/myredis/blob/master/redis.conf#">配置文件内容</a>保存到redis.conf中</p><p>修改配置文件设置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># requirepass foobared</span></span><br><span class="line">requirepass  123456    <span class="comment">#设置成你自己的密码，我这里就设置成123456</span></span><br></pre></td></tr></table></figure><p>修改配置文件(127.0.0.1是仅允许本机访问)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bind 127.0.0.1</span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br></pre></td></tr></table></figure><h2 id="2-4指定配置文件启动redis容器"><a href="#2-4指定配置文件启动redis容器" class="headerlink" title="2.4指定配置文件启动redis容器"></a>2.4指定配置文件启动redis容器</h2><p>执行命令创建redis容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 6379:6379 --name redis \</span><br><span class="line">-v /home/redis/conf/redis.conf:/etc/redis/redis.conf \</span><br><span class="line">-v /home/redis/conf/data:/data \</span><br><span class="line">-d redis redis-server /etc/redis/redis.conf --appendonly <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">命令</th><th>描述</th></tr></thead><tbody><tr><td align="left">–name redis</td><td>设置容器的名字</td></tr><tr><td align="left">-p 6379:6379</td><td>将容器的 6379端口映射到主机的 6379端口</td></tr><tr><td align="left">–restart unless-stopped</td><td>容器重启策略（具体看你怎么配置，我这里没配用的默认的）</td></tr><tr><td align="left">-v &#x2F;home&#x2F;redis&#x2F;data:&#x2F;data</td><td>将Redis储存文件夹挂在到主机</td></tr><tr><td align="left">-v &#x2F;home&#x2F;redis&#x2F;conf&#x2F;redis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf</td><td>将配置文件夹挂在到主机</td></tr><tr><td align="left">redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf</td><td>Redis 容器中设置 redis-server 每次启动读取 &#x2F;etc&#x2F;redis&#x2F;redis.conf 这个配置为准</td></tr><tr><td align="left">–appendonly yes</td><td>在Redis容器启动redis-server服务器并打开Redis持久化配置</td></tr><tr><td align="left">\</td><td>shell 命令换行</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]<span class="comment"># docker start redis</span></span><br><span class="line">redis</span><br><span class="line"><span class="comment">#查看docker中运行的容器</span></span><br><span class="line">[root@localhost conf]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                   CREATED         STATUS         PORTS                                       NAMES</span><br><span class="line">c9ee93a5114b   redis     <span class="string">&quot;docker-entrypoint.s…&quot;</span>   4 minutes ago   Up 3 seconds   0.0.0.0:6379-&gt;6379/tcp, :::6379-&gt;6379/tcp   redis</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果redis没有正常启动则执行下面命令查询日志</span></span><br><span class="line">docker logs redis</span><br></pre></td></tr></table></figure><h2 id="2-5进入redis容器"><a href="#2-5进入redis容器" class="headerlink" title="2.5进入redis容器"></a>2.5进入redis容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@localhost conf]<span class="comment"># docker exec -it redis bash</span></span><br><span class="line">root@c9ee93a5114b:/data<span class="comment"># redis-cli</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name cxy</span><br><span class="line">(error) NOAUTH Authentication required.     <span class="comment">#报错是因为要输入密码</span></span><br><span class="line">127.0.0.1:6379&gt; auth 123456                 <span class="comment">#输入密码123456</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name cxy</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get name </span><br><span class="line"><span class="string">&quot;cxy&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
